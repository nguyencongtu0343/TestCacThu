using System;
using System.Collections.Generic;
using BansheeGz.BGDatabase;

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

#pragma warning disable 414

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class MyTable : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new MyTable(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new MyTable(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5579931681946199927UL,17116495601821238438UL));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.Single speed
	{
		get
		{
			return _speed[Index];
		}
		set
		{
			_speed[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5307582292816005461UL,2379966240639056038UL));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_speed;
	public static BansheeGz.BGDatabase.BGFieldFloat _speed
	{
		get
		{
			if(_ufle12jhs77_speed==null || _ufle12jhs77_speed.IsDeleted) _ufle12jhs77_speed=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5382768312300724909UL,3990299174977381803UL));
			return _ufle12jhs77_speed;
		}
	}
	private static readonly MyTable.Factory _factory0_PFS = new MyTable.Factory();
	private MyTable() : base(MetaDefault)
	{
	}
	private MyTable(BGId id) : base(MetaDefault, id)
	{
	}
	private MyTable(BGMetaEntity meta) : base(meta)
	{
	}
	private MyTable(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static MyTable FindEntity(Predicate<MyTable> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((MyTable) entity)) as MyTable;
	}
	public static List<MyTable> FindEntities(Predicate<MyTable> filter, List<MyTable> result=null, Comparison<MyTable> sort=null)
	{
		result = result ?? new List<MyTable>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((MyTable) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((MyTable) e1, (MyTable) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((MyTable) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<MyTable> action, Predicate<MyTable> filter=null, Comparison<MyTable> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((MyTable) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((MyTable) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((MyTable)e1,(MyTable)e2));
	}
	public static MyTable GetEntity(BGId entityId)
	{
		return (MyTable) MetaDefault.GetEntity(entityId);
	}
	public static MyTable GetEntity(int index)
	{
		return (MyTable) MetaDefault[index];
	}
	public static MyTable GetEntity(string entityName)
	{
		return (MyTable) MetaDefault.GetEntity(entityName);
	}
	public static MyTable NewEntity()
	{
		return (MyTable) MetaDefault.NewEntity();
	}
}
#pragma warning restore 414
